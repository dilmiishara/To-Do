{"ast":null,"code":"import axios from \"axios\";\nimport TaskForm from \"./components/TaskForm.vue\";\nimport TaskList from \"./components/TaskList.vue\";\nexport default {\n  components: {\n    TaskForm,\n    TaskList\n  },\n  data() {\n    return {\n      tasks: [],\n      tabs: [\"Add\", \"All\", \"Pending\", \"Completed\"],\n      activeTab: \"Add\"\n    };\n  },\n  methods: {\n    async fetchTasks() {\n      const res = await axios.get(\"http://localhost:8000/api/get.php\");\n      this.tasks = res.data;\n    },\n    async addTask(task) {\n      await axios.post(\"http://localhost:8000/api/create.php\", task);\n      this.fetchTasks();\n      this.activeTab = \"All\";\n    },\n    async markAsDone(id) {\n      await axios.put(\"http://localhost:8000/api/update.php\", {\n        id\n      });\n      this.fetchTasks();\n    }\n  },\n  mounted() {\n    this.fetchTasks();\n  }\n};","map":{"version":3,"names":["axios","TaskForm","TaskList","components","data","tasks","tabs","activeTab","methods","fetchTasks","res","get","addTask","task","post","markAsDone","id","put","mounted"],"sources":["D:\\projects\\todo-app\\frontend\\todo-frontend\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <h1>üìù My To-Do List</h1>\n\n    <!-- Tabs -->\n    <div class=\"tabs\">\n      <button\n          v-for=\"tab in tabs\"\n          :key=\"tab\"\n          :class=\"{ active: activeTab === tab }\"\n          @click=\"activeTab = tab\"\n      >\n        {{ tab }}\n      </button>\n    </div>\n\n    <!-- Add Tab -->\n    <div v-if=\"activeTab === 'Add'\">\n      <TaskForm @add-task=\"addTask\" />\n    </div>\n\n    <!-- All Tab -->\n    <div v-if=\"activeTab === 'All'\">\n      <TaskList :tasks=\"tasks\" @done-task=\"markAsDone\" />\n    </div>\n\n    <!-- Pending Tab -->\n    <div v-if=\"activeTab === 'Pending'\">\n      <TaskList\n          :tasks=\"tasks.filter(t => t.is_completed == 0)\"\n          @done-task=\"markAsDone\"\n      />\n    </div>\n\n    <!-- Completed Tab -->\n    <div v-if=\"activeTab === 'Completed'\">\n      <TaskList :tasks=\"tasks.filter(t => t.is_completed == 1)\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport TaskForm from \"./components/TaskForm.vue\";\nimport TaskList from \"./components/TaskList.vue\";\n\nexport default {\n  components: { TaskForm, TaskList },\n  data() {\n    return {\n      tasks: [],\n      tabs: [\"Add\", \"All\", \"Pending\", \"Completed\"],\n      activeTab: \"Add\",\n    };\n  },\n  methods: {\n    async fetchTasks() {\n      const res = await axios.get(\"http://localhost:8000/api/get.php\");\n      this.tasks = res.data;\n    },\n    async addTask(task) {\n      await axios.post(\"http://localhost:8000/api/create.php\", task);\n      this.fetchTasks();\n      this.activeTab = \"All\";\n    },\n    async markAsDone(id) {\n      await axios.put(\"http://localhost:8000/api/update.php\", { id });\n      this.fetchTasks();\n    },\n  },\n  mounted() {\n    this.fetchTasks();\n  },\n};\n</script>\n\n<style>\nbody {\n  font-family: \"Poppins\", sans-serif;\n  background: url('@/assets/bg.jpg') no-repeat center center fixed;\n  background-size: cover;\n  margin: 0;\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  overflow: hidden;\n}\n\n\n.app-container {\n  width: 800px;\n  height: 600px;\n  margin: 40px auto;\n  padding: 30px;\n  background: rgba(255, 255, 255, 0.15);\n  border-radius: 25px;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.25);\n  backdrop-filter: blur(10px);\n  -webkit-backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.3);\n  overflow-y: auto;\n}\n\n/* Scrollbar styling for .app-container */\n.app-container::-webkit-scrollbar {\n  width: 8px;               /* Thin scrollbar */\n}\n\n.app-container::-webkit-scrollbar-track {\n  background: rgba(255, 255, 255, 0.1);  /* Transparent background */\n  border-radius: 10px;\n}\n\n.app-container::-webkit-scrollbar-thumb {\n  background:#7c7a7a;   /* Greenish accent */\n  border-radius: 10px;\n  transition: background 0.3s;\n}\n\n.app-container::-webkit-scrollbar-thumb:hover {\n  background: #7c7a7a;   /* Brighter when hovered */\n}\n\n\nh1 {\n  text-align: center;\n  color: #fff;\n  margin-bottom: 25px;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);\n}\n\n/* Tabs */\n.tabs {\n  display: flex;\n  justify-content: space-around;\n  margin-bottom: 25px;\n  border-bottom: 2px solid rgba(255, 255, 255, 0.3);\n}\n\n.tabs button {\n  background: none;\n  border: none;\n  padding: 10px 15px;\n  font-size: 16px;\n  color: #eee;\n  cursor: pointer;\n  transition: 0.3s;\n  border-bottom: 3px solid transparent;\n}\n\n.tabs button:hover {\n  color: #42b983;\n}\n\n.tabs .active {\n  color: #42b983;\n  border-bottom: 3px solid #42b983;\n}\n</style>\n"],"mappings":"AA0CA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,QAAO,MAAO,2BAA2B;AAChD,OAAOC,QAAO,MAAO,2BAA2B;AAEhD,eAAe;EACbC,UAAU,EAAE;IAAEF,QAAQ;IAAEC;EAAS,CAAC;EAClCE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,WAAW,CAAC;MAC5CC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,MAAMC,GAAE,GAAI,MAAMV,KAAK,CAACW,GAAG,CAAC,mCAAmC,CAAC;MAChE,IAAI,CAACN,KAAI,GAAIK,GAAG,CAACN,IAAI;IACvB,CAAC;IACD,MAAMQ,OAAOA,CAACC,IAAI,EAAE;MAClB,MAAMb,KAAK,CAACc,IAAI,CAAC,sCAAsC,EAAED,IAAI,CAAC;MAC9D,IAAI,CAACJ,UAAU,CAAC,CAAC;MACjB,IAAI,CAACF,SAAQ,GAAI,KAAK;IACxB,CAAC;IACD,MAAMQ,UAAUA,CAACC,EAAE,EAAE;MACnB,MAAMhB,KAAK,CAACiB,GAAG,CAAC,sCAAsC,EAAE;QAAED;MAAG,CAAC,CAAC;MAC/D,IAAI,CAACP,UAAU,CAAC,CAAC;IACnB;EACF,CAAC;EACDS,OAAOA,CAAA,EAAG;IACR,IAAI,CAACT,UAAU,CAAC,CAAC;EACnB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}